version: "3.8"

services:
  backend:
    build: ../backend
    restart: always
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    env_file:
      - ../config/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  collector:
    build: ../collector
    restart: always
    depends_on:
      rabbitmq:
        condition: service_started

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: pulseone
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: pulseone
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pulseone"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
