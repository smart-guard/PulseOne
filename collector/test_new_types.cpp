#include <iostream>
#include <string>

// Í∏∞Î≥∏ Íµ¨Ï°∞Ï≤¥ Ï†ïÏùò (NewTypes.h ÎåÄÏã† Í∞ÑÎã®Ìïú Î≤ÑÏ†Ñ)
namespace PulseOne {
namespace New {

enum class ProtocolType {
    MODBUS_TCP = 1,
    MQTT = 3,
    BACNET_IP = 4
};

struct UnifiedDeviceInfo {
    std::string id;
    std::string name;
    ProtocolType protocol;
    std::string endpoint;
    bool enabled = true;
    
    std::string GetProtocolString() const {
        switch (protocol) {
            case ProtocolType::MODBUS_TCP: return "modbus_tcp";
            case ProtocolType::MQTT: return "mqtt";
            case ProtocolType::BACNET_IP: return "bacnet_ip";
            default: return "unknown";
        }
    }
};

} // namespace New
} // namespace PulseOne

int main() {
    std::cout << "=== PulseOne NewTypes ÌÖåÏä§Ìä∏ ===" << std::endl;
    
    using namespace PulseOne::New;
    
    // Modbus ÎîîÎ∞îÏù¥Ïä§ ÏÉùÏÑ±
    UnifiedDeviceInfo modbus_device;
    modbus_device.id = "modbus_001";
    modbus_device.name = "PLC Ï†úÏñ¥Í∏∞";
    modbus_device.protocol = ProtocolType::MODBUS_TCP;
    modbus_device.endpoint = "192.168.1.100:502";
    
    std::cout << "‚úÖ ÎîîÎ∞îÏù¥Ïä§ ÏÉùÏÑ±: " << modbus_device.name << std::endl;
    std::cout << "‚úÖ ÌîÑÎ°úÌÜ†ÏΩú: " << modbus_device.GetProtocolString() << std::endl;
    std::cout << "‚úÖ ÏóîÎìúÌè¨Ïù∏Ìä∏: " << modbus_device.endpoint << std::endl;
    
    // MQTT ÎîîÎ∞îÏù¥Ïä§ ÏÉùÏÑ±
    UnifiedDeviceInfo mqtt_device;
    mqtt_device.id = "mqtt_001";
    mqtt_device.name = "IoT ÏÑºÏÑú";
    mqtt_device.protocol = ProtocolType::MQTT;
    mqtt_device.endpoint = "mqtt://localhost:1883";
    
    std::cout << "‚úÖ MQTT ÎîîÎ∞îÏù¥Ïä§: " << mqtt_device.name << std::endl;
    std::cout << "‚úÖ ÌîÑÎ°úÌÜ†ÏΩú: " << mqtt_device.GetProtocolString() << std::endl;
    
    std::cout << "\nüéä UnifiedDeviceInfo Í∏∞Î≥∏ Íµ¨Ï°∞ ÌÖåÏä§Ìä∏ ÏÑ±Í≥µ!" << std::endl;
    std::cout << "üöÄ Ïù¥Ï†ú Ïã§Ï†ú NewTypes.h ÌååÏùº ÏÉùÏÑ± Ï§ÄÎπÑ ÏôÑÎ£å!" << std::endl;
    
    return 0;
}
