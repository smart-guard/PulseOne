# =============================================================================
# 통합 Redis 설정 (config/redis.env)
# Backend (Node.js) + Collector (C++) 공용 설정
# =============================================================================

# 🔥 기본 Redis 연결 설정 (Docker 환경 자동 감지)
REDIS_HOST=redis                        # Docker: redis, Local: localhost  
REDIS_PORT=6379
REDIS_DB=0                              # 기본 DB
REDIS_PASSWORD=                         # 개발환경 패스워드 없음
REDIS_SSL=false

# 🔥 환경별 호스트 설정 (자동 전환용)
REDIS_HOST_DOCKER=redis                 # Docker Compose 내부 서비스명
REDIS_HOST_EXTERNAL=host.docker.internal    # Mac/Windows Docker Desktop용
REDIS_HOST_LOCAL=localhost              # 순수 로컬 환경용
REDIS_HOST_LOCAL_IP=127.0.0.1           # 로컬 IP

# 🔥 자동 환경 감지 설정
REDIS_AUTO_DETECT_ENV=true              # 환경 자동 감지 활성화
REDIS_CONNECTION_PRIORITY=redis,host.docker.internal,localhost,127.0.0.1

# =============================================================================
# Backend (Node.js) 호환 설정
# =============================================================================

# Primary Redis (Backend용)
REDIS_PRIMARY_ENABLED=true
REDIS_PRIMARY_HOST=redis                # Docker 환경 기본값
REDIS_PRIMARY_PORT=6379
REDIS_PRIMARY_DB=0
REDIS_PRIMARY_PASSWORD=
REDIS_PRIMARY_SSL=false

# Secondary Redis (선택적)
REDIS_SECONDARY_ENABLED=false           # 개발환경에서는 단일 Redis 사용
REDIS_SECONDARY_HOST=redis
REDIS_SECONDARY_PORT=6379  
REDIS_SECONDARY_DB=1
REDIS_SECONDARY_PASSWORD=
REDIS_SECONDARY_SSL=false

# =============================================================================
# 연결 및 성능 설정 (Backend + Collector 공용)
# =============================================================================

# 연결 타임아웃
REDIS_CONNECTION_TIMEOUT_MS=5000        # 연결 타임아웃
REDIS_COMMAND_TIMEOUT_MS=3000           # 명령어 타임아웃
REDIS_SOCKET_TIMEOUT_MS=3000            # 소켓 타임아웃

# 재시도 설정
REDIS_RETRY_ATTEMPTS=3                  # 재시도 횟수
REDIS_RETRY_DELAY_MS=1000               # 재시도 간격
REDIS_RETRY_EXPONENTIAL_BACKOFF=true    # 지수적 백오프

# 연결 풀 설정
REDIS_MAX_CONNECTIONS=20                # 최대 연결 수
REDIS_MIN_CONNECTIONS=5                 # 최소 연결 수
REDIS_CONNECTION_POOL_SIZE=10           # 연결 풀 크기
REDIS_IDLE_TIMEOUT_MS=300000            # 유휴 연결 타임아웃

# =============================================================================
# 데이터베이스 분리 (용도별)
# =============================================================================

# 공통 DB 분할
REDIS_DB_MAIN=0                         # 메인 애플리케이션 데이터
REDIS_DB_CACHE=1                        # 캐시 데이터  
REDIS_DB_SESSIONS=2                     # 사용자 세션
REDIS_DB_REALTIME=3                     # 실시간 데이터
REDIS_DB_QUEUES=4                       # 작업 큐
REDIS_DB_LOGS=5                         # 로그 캐시
REDIS_DB_METRICS=6                      # 성능 지표
REDIS_DB_CONFIG=7                       # 설정 캐시

# Backend 전용
REDIS_DB_BACKEND_SESSION=2              # Node.js 세션
REDIS_DB_BACKEND_CACHE=1                # Node.js 캐시

# Collector 전용  
REDIS_DB_COLLECTOR_DATA=3               # C++ Collector 데이터
REDIS_DB_COLLECTOR_STATUS=4             # C++ Collector 상태

# 테스트 전용
REDIS_DB_TEST=15                        # 테스트 DB (격리됨)

# =============================================================================
# TTL (Time To Live) 설정
# =============================================================================

# 기본 TTL
REDIS_DEFAULT_TTL=3600                  # 1시간
REDIS_DEFAULT_TTL_SEC=3600              # Backend 호환
REDIS_SHORT_TTL=300                     # 5분
REDIS_MEDIUM_TTL=1800                   # 30분  
REDIS_LONG_TTL=86400                    # 24시간
REDIS_PERMANENT_TTL=0                   # 영구 보관

# 용도별 TTL
REDIS_SESSION_TTL_SEC=28800             # 세션 8시간
REDIS_REALTIME_TTL_SEC=300              # 실시간 데이터 5분
REDIS_CACHE_DEFAULT_TTL_S=300           # 캐시 5분
REDIS_DEVICE_DATA_TTL=1800              # 디바이스 데이터 30분
REDIS_PROTOCOL_STATUS_TTL=300           # 프로토콜 상태 5분
REDIS_WORKER_STATUS_TTL=120             # 워커 상태 2분

# =============================================================================
# 키 네이밍 전략
# =============================================================================

# 기본 프리픽스
REDIS_KEY_PREFIX=pulseone:              # 전체 프로젝트 프리픽스
REDIS_KEY_SEPARATOR=:                   # 구분자
REDIS_KEY_NAMESPACE=pulseone            # 네임스페이스

# Backend 키 프리픽스
REDIS_PREFIX_SESSION=session:           # 세션
REDIS_PREFIX_CACHE=cache:               # 캐시
REDIS_PREFIX_USER=user:                 # 사용자

# Collector 키 프리픽스  
REDIS_PREFIX_DEVICE=device:             # 디바이스
REDIS_PREFIX_DATAPOINT=datapoint:       # 데이터포인트
REDIS_PREFIX_PROTOCOL=protocol:         # 프로토콜
REDIS_PREFIX_DRIVER=driver:             # 드라이버
REDIS_PREFIX_WORKER=worker:             # 워커
REDIS_PREFIX_PIPELINE=pipeline:         # 파이프라인

# 공통 키 프리픽스
REDIS_PREFIX_ALARM=alarm:               # 알람
REDIS_PREFIX_HISTORY=history:           # 이력
REDIS_PREFIX_EVENT=event:               # 이벤트
REDIS_PREFIX_METRIC=metric:             # 지표

# 테스트 키 프리픽스
REDIS_KEY_PREFIX_TEST=pulseone:test:    # 테스트 전용

# =============================================================================
# 실시간 데이터 처리 (Pub/Sub, Streams)
# =============================================================================

# Pub/Sub 설정
REDIS_PUBSUB_ENABLED=true               # Pub/Sub 활성화
REDIS_PUBSUB_CHANNEL_PREFIX=pulseone:events:  # 채널 프리픽스
REDIS_PUBSUB_MAX_CLIENTS=50             # 최대 구독자
REDIS_PUBSUB_BUFFER_SIZE=10000          # 메시지 버퍼

# 실시간 채널
REDIS_CHANNEL_DEVICE_STATUS=device:status      # 디바이스 상태
REDIS_CHANNEL_DATA_UPDATE=data:update          # 데이터 업데이트  
REDIS_CHANNEL_ALARM_EVENT=alarm:event          # 알람 이벤트
REDIS_CHANNEL_SYSTEM_EVENT=system:event        # 시스템 이벤트

# Redis Streams (선택적)
REDIS_STREAM_ENABLED=false              # 스트림 기능
REDIS_STREAM_MAX_LENGTH=10000           # 최대 길이
REDIS_STREAM_TRIM_STRATEGY=maxlen       # 트림 전략

# =============================================================================
# 성능 최적화
# =============================================================================

# 메모리 설정
REDIS_MAX_MEMORY=2gb                    # 최대 메모리
REDIS_EVICTION_POLICY=allkeys-lru       # LRU 삭제 정책
REDIS_MAXMEMORY_SAMPLES=5               # LRU 샘플 수

# 파이프라인 설정
REDIS_PIPELINE_ENABLED=true             # 파이프라인 사용
REDIS_PIPELINE_BATCH_SIZE=100           # 배치 크기
REDIS_PIPELINE_FLUSH_INTERVAL_MS=100    # 플러시 간격

# 압축 설정
REDIS_COMPRESSION_ENABLED=false         # 압축 비활성화 (호환성)
REDIS_COMPRESSION_THRESHOLD_BYTES=1024  # 압축 임계값

# 백업 설정 (개발환경에서는 비활성화)
REDIS_SAVE_ENABLED=true                 # RDB 스냅샷
REDIS_SAVE_INTERVAL_SEC=900             # 15분마다
REDIS_AOF_ENABLED=true                  # AOF 로그
REDIS_AOF_SYNC=everysec                 # AOF 동기화

# 백업 경로
REDIS_BACKUP_ENABLED=false              # 개발환경 백업 비활성화
REDIS_BACKUP_INTERVAL_HOURS=6           # 백업 간격
REDIS_BACKUP_RETENTION_DAYS=7           # 보관 기간
REDIS_BACKUP_PATH=/app/data/backup/redis # 백업 경로

# =============================================================================
# 개발/테스트 환경 설정
# =============================================================================

# 개발 모드
REDIS_DEV_MODE=true                     # 개발 모드
REDIS_DEBUG_ENABLED=true                # 디버그 로그
REDIS_VERBOSE_LOGGING=false             # 상세 로깅 (성능 영향)
DEV_REDIS_DEBUG=true                    # Backend 호환
DEV_REDIS_FLUSH_ON_START=false          # 시작 시 초기화 (주의!)

# 테스트 설정
REDIS_TEST_MODE=true                    # 테스트 모드
REDIS_FLUSH_ON_START=false              # 데이터 초기화 (주의!)
REDIS_AUTO_PING=true                    # 자동 핑
REDIS_PING_INTERVAL_S=30                # 핑 간격

# 모니터링
REDIS_ENABLE_MONITORING=true            # 모니터링 활성화
REDIS_MONITOR_SLOW_QUERIES=true         # 느린 쿼리 모니터링
REDIS_SLOW_QUERY_THRESHOLD_MS=100       # 느린 쿼리 임계값
REDIS_ENABLE_STATISTICS=true            # 통계 수집

# =============================================================================
# 클라이언트별 특화 설정
# =============================================================================

# Node.js Backend 설정
REDIS_CLIENT_TYPE=ioredis               # ioredis 클라이언트
REDIS_CLUSTER_ENABLED=false             # 클러스터 비활성화
REDIS_SENTINEL_ENABLED=false            # 센티넬 비활성화

# C++ Collector 설정
REDIS_USE_HIREDIS=true                  # hiredis 사용
REDIS_HIREDIS_KEEPALIVE=true            # Keep-alive
REDIS_HIREDIS_TCP_NODELAY=true          # TCP_NODELAY
REDIS_THREAD_SAFE=true                  # 스레드 안전
REDIS_CONNECTION_PER_THREAD=false       # 연결 공유

# =============================================================================
# 보안 설정
# =============================================================================

# SSL/TLS (개발환경에서는 비활성화)
REDIS_SSL_ENABLED=false                 # SSL 비활성화
REDIS_SSL_CERT_FILE=                    # SSL 인증서
REDIS_SSL_KEY_FILE=                     # SSL 키
REDIS_SSL_CA_FILE=                      # SSL CA
REDIS_SSL_VERIFY_PEER=true              # 피어 검증

# 인증 (개발환경에서는 비활성화)
REDIS_AUTH_ENABLED=false                # 인증 비활성화
REDIS_ACL_ENABLED=false                 # ACL 비활성화

# =============================================================================
# Docker 환경 특화 설정
# =============================================================================

# Docker 환경 자동 감지
REDIS_DOCKER_ENV_DETECT=true            # Docker 환경 감지
DOCKER_REDIS_AUTO_SWITCH=true           # 자동 전환
DOCKER_INTERNAL_HOST=redis               # 내부 호스트
DOCKER_EXTERNAL_HOST=host.docker.internal  # 외부 호스트

# 연결 테스트
REDIS_CONNECTION_TEST_ON_START=true     # 시작 시 연결 테스트
REDIS_CONNECTION_TEST_TIMEOUT_MS=3000   # 테스트 타임아웃
REDIS_FALLBACK_ENABLED=true             # 대체 호스트 사용

# =============================================================================
# 로깅 및 에러 처리
# =============================================================================

# 로그 설정
REDIS_LOG_LEVEL=INFO                    # 로그 레벨
REDIS_LOG_CONNECTION_EVENTS=true        # 연결 이벤트 로깅
REDIS_LOG_COMMAND_EVENTS=false          # 명령어 이벤트 (성능 영향)

# 에러 처리  
REDIS_ERROR_RETRY_ENABLED=true          # 에러 재시도
REDIS_ERROR_LOG_ENABLED=true            # 에러 로깅
REDIS_CIRCUIT_BREAKER_ENABLED=false     # 서킷 브레이커 (추후)

# =============================================================================
# 설정 검증
# =============================================================================

# 시작 시 검증
REDIS_VALIDATE_ON_START=true            # 설정 검증
REDIS_REQUIRED_VERSION=5.0.0            # 최소 Redis 버전
REDIS_CHECK_MEMORY_USAGE=true           # 메모리 사용량 체크
REDIS_CHECK_CONNECTION_LIMIT=true       # 연결 수 제한 체크