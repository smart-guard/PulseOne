# PulseOne 통합 아키텍처 간단 테스트
CXX = g++
CXXFLAGS = -std=c++17 -Wall -Wextra -O2 -g
INCLUDES = -Iinclude

# 색상 정의
GREEN = \033[0;32m
BLUE = \033[0;34m  
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m

.PHONY: all clean compile-test help env-check

all: compile-test

help:
	@echo -e "$(BLUE)PulseOne 통합 아키텍처 테스트$(NC)"
	@echo -e "$(GREEN)명령어:$(NC)"
	@echo -e "  make -f Makefile.unified.test compile-test"
	@echo -e "  make -f Makefile.unified.test env-check"
	@echo -e "  make -f Makefile.unified.test clean"

env-check:
	@echo -e "$(BLUE)환경 검사$(NC)"
	@g++ --version | head -1
	@echo -e "$(GREEN)C++17 테스트:$(NC)"
	@echo 'int main(){return 0;}' | g++ -std=c++17 -x c++ - -o /tmp/test 2>/dev/null && echo -e "$(GREEN)✅ C++17 OK$(NC)" || echo -e "$(RED)❌ C++17 오류$(NC)"
	@rm -f /tmp/test

compile-test: test_simple.cpp
	@echo -e "$(BLUE)컴파일 테스트$(NC)"
	$(CXX) $(CXXFLAGS) -o test_simple test_simple.cpp
	@echo -e "$(GREEN)✅ 컴파일 성공$(NC)"
	./test_simple
	@echo -e "$(GREEN)✅ 실행 성공$(NC)"

test_simple.cpp:
	@echo -e "$(BLUE)테스트 파일 생성$(NC)"
	@cat > test_simple.cpp << 'TESTEOF'
#include <iostream>
#include <string>
#include <vector>
#include <memory>

int main() {
    std::cout << "=== PulseOne 기본 테스트 ===" << std::endl;
    
    std::string device_name = "Test Device";
    std::vector<int> data_points = {1, 2, 3, 4, 5};
    auto smart_ptr = std::make_unique<std::string>("Smart Pointer Test");
    
    std::cout << "✅ 디바이스: " << device_name << std::endl;
    std::cout << "✅ 데이터 포인트: " << data_points.size() << "개" << std::endl;
    std::cout << "✅ 스마트 포인터: " << *smart_ptr << std::endl;
    std::cout << "🎊 모든 기본 테스트 통과!" << std::endl;
    
    return 0;
}
TESTEOF

clean:
	@echo -e "$(YELLOW)정리 중...$(NC)"
	@rm -f test_simple test_simple.cpp
	@echo -e "$(GREEN)✅ 정리 완료$(NC)"
