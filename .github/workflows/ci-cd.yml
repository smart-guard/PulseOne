name: PulseOne CI/CD

on:
  push:
    tags:
      - 'v*'   # v1.0.0 같은 태그 push 시 실행

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 소스 체크아웃
        uses: actions/checkout@v4

      - name: config/.env 파일 생성
        run: |
          mkdir -p config
          echo "REDIS_HOST=redis" >> config/.env
          echo "POSTGRES_HOST=postgres" >> config/.env
          echo "RABBITMQ_HOST=rabbitmq" >> config/.env
          echo "POSTGRES_USER=pulseone" >> config/.env
          echo "POSTGRES_PASSWORD=yourpassword" >> config/.env
          echo "POSTGRES_DB=pulseone" >> config/.env

      - name: Backend 의존성 설치
        working-directory: ./backend
        run: npm install

      - name: Backend 테스트 실행
        working-directory: ./backend
        run: npm test || echo "테스트 스킵 또는 실패 무시"

      - name: Collector 빌드
        working-directory: ./collector
        run: make build

      - name: ModbusDriver 빌드
        working-directory: ./driver/ModbusDriver
        run: make build

      - name: Docker Compose 빌드 및 기동
        working-directory: ./docker
        run: |
          docker compose down || true
          docker compose up --build -d

      - name: Backend 로그 및 헬스체크
        run: |
          sleep 20
          docker ps -a
          echo "[ BACKEND LOGS ]"
          docker logs $(docker ps -aqf "name=backend") || true
          echo "[ COLLECTOR LOGS ]"
          docker logs $(docker ps -aqf "name=collector") || true
          echo "[ HEALTHCHECK ]"
          docker exec $(docker ps -aqf "name=backend") curl -f http://localhost:3000/health || echo "헬스체크 실패"

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: collector-linux
          path: collector/bin/collector

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build collector.exe
        run: |
          cd collector
          make build

      - name: Upload Windows .exe
        uses: actions/upload-artifact@v4
        with:
          name: collector-windows
          path: collector/bin/collector.exe

  release:
    name: Release Binary
    needs: [build-test-deploy, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: collector-windows
          path: dist/

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: collector-linux
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "PulseOne Release - ${{ github.ref_name }}"
          tag_name: "${{ github.ref_name }}"
          files: |
            dist/collector.exe
            dist/collector
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      # 🔔 Slack/Discord 알림 (필요 시 주석 해제)
      # - name: Notify Slack
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     payload: |
      #       {
      #         "text": ":rocket: PulseOne ${{ github.ref_name }} 릴리즈 완료!"
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  release-docker:
    name: Release Docker Image (multi-arch)
    needs: [build-test-deploy]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build multi-arch Docker image (not pushed yet)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false  # ← 필요 시 true로 변경
          tags: |
            yourname/collector:latest
            yourname/collector:${{ github.ref_name }}

      # 🔐 DockerHub 연동 시 아래 주석 해제
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Push Docker image
      #   run: |
      #     docker push yourname/collector:latest
      #     docker push yourname/collector:${{ github.ref_name }}
