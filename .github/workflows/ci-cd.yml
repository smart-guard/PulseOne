name: PulseOne CI/CD

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    # 아래 services 블록은 실무에서는 주석 처리(포트 충돌 방지, docker compose로만 통합 관리)
    # services:
    #   rabbitmq:
    #     image: rabbitmq:3-management
    #     ports:
    #       - 5672:5672
    #       - 15672:15672
    #   postgres:
    #     image: postgres:14
    #     env:
    #       POSTGRES_USER: pulseone
    #       POSTGRES_PASSWORD: yourpassword
    #       POSTGRES_DB: pulseone
    #     ports:
    #       - 5432:5432
    #   redis:
    #     image: redis:alpine
    #     ports:
    #       - 6379:6379

    steps:
      - name: 소스 체크아웃
        uses: actions/checkout@v4

      - name: config/.env 파일 생성
        run: |
          echo "${{ secrets.ENV_FILE }}" > config/.env

      - name: Backend 의존성 설치
        working-directory: ./backend
        run: npm install

      - name: Backend 테스트 실행
        working-directory: ./backend
        run: npm test || echo "테스트 스킵 또는 실패 무시"

      - name: Collector 빌드
        working-directory: ./collector
        run: make build

      - name: ModbusDriver 빌드
        working-directory: ./driver/ModbusDriver
        run: make build

      - name: Docker Compose 빌드 및 기동
        working-directory: ./docker
        run: |
          docker compose down || true
          docker compose up --build -d

      - name: Backend 헬스체크
        run: |
          sleep 20
          docker run --rm --network docker_default curlimages/curl:latest \
            curl -f http://backend:3000/health
