name: PulseOne CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  ENV_STAGE: dev # 변경 가능: dev, staging, prod

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up config/.env file based on stage
        run: |
          mkdir -p ./backend/config
          cp ./config/.env.${ENV_STAGE} ./backend/config/.env

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Validate environment variables
        working-directory: ./backend
        run: node scripts/validate-env.js

      - name: Run backend unit tests
        working-directory: ./backend
        run: npm test || echo "✅ Unit test failed (non-blocking)"

      - name: Run RPC test
        working-directory: ./backend
        run: node __tests__/rpc.test.js || echo "✅ RPC test skipped"

      - name: Run InfluxDB test
        working-directory: ./backend
        run: node __tests__/influx.test.js || echo "✅ Influx test skipped"

      - name: Build Collector (Linux)
        working-directory: ./collector
        run: make build

      - name: Run Collector binary
        run: |
          chmod +x ./collector/bin/collector
          ./collector/bin/collector --help || echo "Collector test skipped"

      - name: Build ModbusDriver
        working-directory: ./driver/ModbusDriver
        run: make build

      - name: Launch Docker Compose for integration test
        working-directory: ./docker
        run: |
          docker compose down || true
          docker compose up --build -d

      - name: Backend health check & logs
        run: |
          sleep 10
          docker ps -a
          echo "[ BACKEND LOGS ]"
          docker logs $(docker ps -aqf "name=backend") || true
          echo "[ COLLECTOR LOGS ]"
          docker logs $(docker ps -aqf "name=collector") || true
          docker exec $(docker ps -aqf "name=backend") curl -f http://localhost:3000/health || echo "Healthcheck failed"

      - name: Upload collector Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: collector-linux
          path: collector/bin/collector

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build collector.exe
        working-directory: ./collector
        run: make build

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: collector-windows
          path: collector/bin/collector.exe

  release:
    name: Release Binary
    needs: [build-test-deploy, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: collector-windows
          path: dist/

      - name: Download artifacts (Linux)
        uses: actions/download-artifact@v4
        with:
          name: collector-linux
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "PulseOne Release - ${{ github.ref_name }}"
          tag_name: "${{ github.ref_name }}"
          files: |
            dist/collector.exe
            dist/collector
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  release-docker:
    name: Release Docker Image (multi-arch)
    needs: [build-test-deploy]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU for multi-arch
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            pulseone/collector:latest
            pulseone/collector:${{ github.ref_name }}

      # Optional push to Docker Hub:
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #
      # - name: Push Docker image
      #   run: |
      #     docker push pulseone/collector:latest
      #     docker push pulseone/collector:${{ github.ref_name }}
