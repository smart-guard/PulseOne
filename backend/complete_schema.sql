CREATE TABLE schema_versions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    version VARCHAR(20) NOT NULL,
    applied_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    description TEXT
);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE tenants (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    company_name VARCHAR(100) NOT NULL UNIQUE,
    company_code VARCHAR(20) NOT NULL UNIQUE,
    domain VARCHAR(100) UNIQUE,
    
    -- Ïó∞ÎùΩÏ≤ò Ï†ïÎ≥¥
    contact_name VARCHAR(100),
    contact_email VARCHAR(100),
    contact_phone VARCHAR(20),
    
    -- Íµ¨ÎèÖ Ï†ïÎ≥¥
    subscription_plan VARCHAR(20) DEFAULT 'starter',
    subscription_status VARCHAR(20) DEFAULT 'active',
    max_edge_servers INTEGER DEFAULT 3,
    max_data_points INTEGER DEFAULT 1000,
    max_users INTEGER DEFAULT 5,
    
    -- ÏÉÅÌÉú Ï†ïÎ≥¥
    is_active INTEGER DEFAULT 1,
    trial_end_date DATETIME,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE sites (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    location VARCHAR(200),
    description TEXT,
    is_active INTEGER DEFAULT 1,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE
);
CREATE TABLE edge_servers (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    
    -- ÏÑúÎ≤Ñ ÏãùÎ≥Ñ Ï†ïÎ≥¥
    server_name VARCHAR(100) NOT NULL,
    factory_name VARCHAR(100),
    location VARCHAR(200),
    
    -- ÎÑ§Ìä∏ÏõåÌÅ¨ Ï†ïÎ≥¥
    ip_address VARCHAR(45),
    mac_address VARCHAR(17),
    hostname VARCHAR(100),
    
    -- Îì±Î°ù Ï†ïÎ≥¥
    registration_token VARCHAR(255) UNIQUE,
    activation_code VARCHAR(50),
    
    -- ÏÉÅÌÉú Ï†ïÎ≥¥
    status VARCHAR(20) DEFAULT 'pending',
    last_seen DATETIME,
    version VARCHAR(20),
    
    -- ÏÑ§Ï†ï Ï†ïÎ≥¥
    config TEXT,
    sync_enabled INTEGER DEFAULT 1,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE
);
CREATE TABLE device_groups (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    site_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    parent_group_id INTEGER,
    group_type VARCHAR(50) DEFAULT 'functional', -- functional, physical, protocol
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE,
    FOREIGN KEY (site_id) REFERENCES sites(id) ON DELETE CASCADE,
    FOREIGN KEY (parent_group_id) REFERENCES device_groups(id) ON DELETE SET NULL
);
CREATE TABLE driver_plugins (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) NOT NULL,
    protocol_type VARCHAR(50) NOT NULL,
    version VARCHAR(20) NOT NULL,
    file_path VARCHAR(255) NOT NULL,
    description TEXT,
    
    -- ÌîåÎü¨Í∑∏Ïù∏ Ï†ïÎ≥¥
    author VARCHAR(100),
    api_version INTEGER DEFAULT 1,
    is_enabled INTEGER DEFAULT 1,
    config_schema TEXT, -- JSON Ïä§ÌÇ§Îßà
    
    -- ÎùºÏù¥ÏÑ†Ïä§ Ï†ïÎ≥¥
    license_type VARCHAR(20) DEFAULT 'free',
    license_expires DATETIME,
    
    installed_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    UNIQUE(protocol_type, version)
);
CREATE TABLE devices (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    site_id INTEGER NOT NULL,
    device_group_id INTEGER,
    edge_server_id INTEGER,
    
    -- ÎîîÎ∞îÏù¥Ïä§ Í∏∞Î≥∏ Ï†ïÎ≥¥
    name VARCHAR(100) NOT NULL,
    description TEXT,
    device_type VARCHAR(50) NOT NULL, -- PLC, HMI, SENSOR, GATEWAY, METER, CONTROLLER
    manufacturer VARCHAR(100),
    model VARCHAR(100),
    serial_number VARCHAR(100),
    
    -- ÌîÑÎ°úÌÜ†ÏΩú ÏÑ§Ï†ï
    protocol_type VARCHAR(50) NOT NULL, -- MODBUS_TCP, MODBUS_RTU, MQTT, BACNET, OPCUA
    endpoint VARCHAR(255) NOT NULL, -- IP:Port ÎòêÎäî Ïó∞Í≤∞ Î¨∏ÏûêÏó¥
    config TEXT NOT NULL, -- JSON ÌòïÌÉú ÌîÑÎ°úÌÜ†ÏΩúÎ≥Ñ ÏÑ§Ï†ï
    
    -- ÏàòÏßë ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÎßå, ÏÑ∏Î∂Ä ÏÑ§Ï†ïÏùÄ device_settings ÌÖåÏù¥Î∏î Ï∞∏Ï°∞)
    polling_interval INTEGER DEFAULT 1000,
    timeout INTEGER DEFAULT 3000,
    retry_count INTEGER DEFAULT 3,
    
    -- ÏÉÅÌÉú Ï†ïÎ≥¥
    is_enabled INTEGER DEFAULT 1,
    installation_date DATE,
    last_maintenance DATE,
    
    created_by INTEGER,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE,
    FOREIGN KEY (site_id) REFERENCES sites(id) ON DELETE CASCADE,
    FOREIGN KEY (device_group_id) REFERENCES device_groups(id) ON DELETE SET NULL,
    FOREIGN KEY (edge_server_id) REFERENCES edge_servers(id) ON DELETE SET NULL
);
CREATE TABLE device_settings (
    device_id INTEGER PRIMARY KEY,
    
    -- Ìè¥ÎßÅ Î∞è ÌÉÄÏù¥Î∞ç ÏÑ§Ï†ï
    polling_interval_ms INTEGER DEFAULT 1000,
    scan_rate_override INTEGER, -- Í∞úÎ≥Ñ ÎîîÎ∞îÏù¥Ïä§ Ïä§Ï∫î Ï£ºÍ∏∞ Ïò§Î≤ÑÎùºÏù¥Îìú
    
    -- Ïó∞Í≤∞ Î∞è ÌÜµÏã† ÏÑ§Ï†ï
    connection_timeout_ms INTEGER DEFAULT 10000,
    read_timeout_ms INTEGER DEFAULT 5000,
    write_timeout_ms INTEGER DEFAULT 5000,
    
    -- Ïû¨ÏãúÎèÑ Ï†ïÏ±Ö
    max_retry_count INTEGER DEFAULT 3,
    retry_interval_ms INTEGER DEFAULT 5000,
    backoff_multiplier DECIMAL(3,2) DEFAULT 1.5, -- ÏßÄÏàò Î∞±Ïò§ÌîÑ
    backoff_time_ms INTEGER DEFAULT 60000,
    max_backoff_time_ms INTEGER DEFAULT 300000, -- ÏµúÎåÄ 5Î∂Ñ
    
    -- Keep-alive ÏÑ§Ï†ï
    keep_alive_enabled INTEGER DEFAULT 1,
    keep_alive_interval_s INTEGER DEFAULT 30,
    keep_alive_timeout_s INTEGER DEFAULT 10,
    
    -- Îç∞Ïù¥ÌÑ∞ ÌíàÏßà Í¥ÄÎ¶¨
    data_validation_enabled INTEGER DEFAULT 1,
    outlier_detection_enabled INTEGER DEFAULT 0,
    deadband_enabled INTEGER DEFAULT 1,
    
    -- Î°úÍπÖ Î∞è ÏßÑÎã®
    detailed_logging_enabled INTEGER DEFAULT 0,
    performance_monitoring_enabled INTEGER DEFAULT 1,
    diagnostic_mode_enabled INTEGER DEFAULT 0,
    
    -- Î©îÌÉÄÎç∞Ïù¥ÌÑ∞
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_by INTEGER,
    
    FOREIGN KEY (device_id) REFERENCES devices(id) ON DELETE CASCADE
);
CREATE TABLE device_status (
    device_id INTEGER PRIMARY KEY,
    connection_status VARCHAR(20) NOT NULL DEFAULT 'disconnected',
    last_communication DATETIME,
    error_count INTEGER DEFAULT 0,
    last_error TEXT,
    response_time INTEGER,
    
    -- Ï∂îÍ∞Ä ÏßÑÎã® Ï†ïÎ≥¥
    firmware_version VARCHAR(50),
    hardware_info TEXT, -- JSON ÌòïÌÉú
    diagnostic_data TEXT, -- JSON ÌòïÌÉú
    
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (device_id) REFERENCES devices(id) ON DELETE CASCADE
);
CREATE INDEX idx_tenants_code ON tenants(company_code);
CREATE INDEX idx_sites_tenant ON sites(tenant_id);
CREATE INDEX idx_edge_servers_tenant ON edge_servers(tenant_id);
CREATE INDEX idx_device_groups_tenant_site ON device_groups(tenant_id, site_id);
CREATE INDEX idx_devices_tenant ON devices(tenant_id);
CREATE INDEX idx_devices_site ON devices(site_id);
CREATE INDEX idx_devices_group ON devices(device_group_id);
CREATE INDEX idx_devices_edge_server ON devices(edge_server_id);
CREATE INDEX idx_devices_protocol ON devices(protocol_type);
CREATE INDEX idx_devices_type ON devices(device_type);
CREATE INDEX idx_devices_enabled ON devices(is_enabled);
CREATE INDEX idx_device_settings_device_id ON device_settings(device_id);
CREATE INDEX idx_device_settings_polling ON device_settings(polling_interval_ms);
CREATE TABLE test_table (id INTEGER);
CREATE TABLE data_points_backup(
  id INT,
  device_id INT,
  name TEXT,
  description TEXT,
  address INT,
  data_type TEXT,
  access_mode TEXT,
  unit TEXT,
  scaling_factor NUM,
  scaling_offset NUM,
  min_value NUM,
  max_value NUM,
  is_enabled INT,
  scan_rate INT,
  deadband NUM,
  config TEXT,
  tags TEXT,
  created_at NUM,
  updated_at NUM
);
CREATE TABLE current_values_backup(
  point_id INT,
  value NUM,
  raw_value NUM,
  string_value TEXT,
  quality TEXT,
  timestamp NUM,
  updated_at NUM
);
CREATE TABLE data_points (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    device_id INTEGER NOT NULL,
    
    -- üî• Í∏∞Î≥∏ ÏãùÎ≥Ñ Ï†ïÎ≥¥
    name VARCHAR(100) NOT NULL,
    description TEXT,
    
    -- üî• Ï£ºÏÜå Ï†ïÎ≥¥ (Struct DataPointÏôÄ ÏùºÏπò)
    address INTEGER NOT NULL,                    -- uint32_t address
    address_string VARCHAR(255),                 -- std::string address_string
    
    -- üî• Îç∞Ïù¥ÌÑ∞ ÌÉÄÏûÖ Î∞è Ï†ëÍ∑ºÏÑ± (Struct DataPointÏôÄ ÏùºÏπò)
    data_type VARCHAR(20) NOT NULL DEFAULT 'UNKNOWN',  -- std::string data_type
    access_mode VARCHAR(10) DEFAULT 'read',             -- std::string access_mode
    is_enabled INTEGER DEFAULT 1,                       -- bool is_enabled
    is_writable INTEGER DEFAULT 0,                      -- bool is_writable
    
    -- üî• ÏóîÏßÄÎãàÏñ¥ÎßÅ Îã®ÏúÑ Î∞è Ïä§ÏºÄÏùºÎßÅ (Struct DataPointÏôÄ ÏùºÏπò)
    unit VARCHAR(50),                            -- std::string unit
    scaling_factor REAL DEFAULT 1.0,            -- double scaling_factor
    scaling_offset REAL DEFAULT 0.0,            -- double scaling_offset
    min_value REAL DEFAULT 0.0,                 -- double min_value
    max_value REAL DEFAULT 0.0,                 -- double max_value
    
    -- üî•üî•üî• Î°úÍπÖ Î∞è ÏàòÏßë ÏÑ§Ï†ï (Ï§ëÏöî! Ïù¥Ï†ÑÏóê ÏóÜÎçò Ïª¨ÎüºÎì§)
    log_enabled INTEGER DEFAULT 1,              -- bool log_enabled ‚úÖ
    log_interval_ms INTEGER DEFAULT 0,          -- uint32_t log_interval_ms ‚úÖ
    log_deadband REAL DEFAULT 0.0,              -- double log_deadband ‚úÖ
    polling_interval_ms INTEGER DEFAULT 0,      -- uint32_t polling_interval_ms
    
    -- üî•üî•üî• Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ (Ï§ëÏöî! Ïù¥Ï†ÑÏóê ÏóÜÎçò Ïª¨ÎüºÎì§)
    group_name VARCHAR(50),                      -- std::string group
    tags TEXT,                                   -- std::string tags (JSON Î∞∞Ïó¥) ‚úÖ
    metadata TEXT,                               -- std::string metadata (JSON Í∞ùÏ≤¥) ‚úÖ
    protocol_params TEXT,                        -- map<string,string> protocol_params (JSON)
    
    -- üî• ÏãúÍ∞Ñ Ï†ïÎ≥¥
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (device_id) REFERENCES devices(id) ON DELETE CASCADE,
    UNIQUE(device_id, address)
);
CREATE TABLE current_values (
    point_id INTEGER PRIMARY KEY,
    
    -- üî• Ïã§Ï†ú Í∞í (JSONÏúºÎ°ú DataVariant Ï†ÄÏû•)
    current_value TEXT,                          -- JSON: {"value": 123.45}
    raw_value TEXT,                              -- JSON: {"value": 12345} (Ïä§ÏºÄÏùºÎßÅ Ï†Ñ)
    value_type VARCHAR(10) DEFAULT 'double',     -- bool, int16, uint16, int32, uint32, float, double, string
    
    -- üî• Îç∞Ïù¥ÌÑ∞ ÌíàÏßà Î∞è ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ
    quality_code INTEGER DEFAULT 0,             -- DataQuality enum Í∞í
    quality VARCHAR(20) DEFAULT 'not_connected', -- ÌÖçÏä§Ìä∏ ÌëúÌòÑ
    
    -- üî• ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑÎì§
    value_timestamp DATETIME,                   -- Í∞í Î≥ÄÍ≤Ω ÏãúÍ∞Ñ
    quality_timestamp DATETIME,                 -- ÌíàÏßà Î≥ÄÍ≤Ω ÏãúÍ∞Ñ  
    last_log_time DATETIME,                     -- ÎßàÏßÄÎßâ Î°úÍπÖ ÏãúÍ∞Ñ
    last_read_time DATETIME,                    -- ÎßàÏßÄÎßâ ÏùΩÍ∏∞ ÏãúÍ∞Ñ
    last_write_time DATETIME,                   -- ÎßàÏßÄÎßâ Ïì∞Í∏∞ ÏãúÍ∞Ñ
    
    -- üî• ÌÜµÍ≥Ñ Ïπ¥Ïö¥ÌÑ∞Îì§
    read_count INTEGER DEFAULT 0,               -- ÏùΩÍ∏∞ ÌöüÏàò
    write_count INTEGER DEFAULT 0,              -- Ïì∞Í∏∞ ÌöüÏàò
    error_count INTEGER DEFAULT 0,              -- ÏóêÎü¨ ÌöüÏàò
    
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (point_id) REFERENCES data_points(id) ON DELETE CASCADE
);
CREATE INDEX idx_data_points_device ON data_points(device_id);
CREATE INDEX idx_data_points_enabled ON data_points(is_enabled);
CREATE INDEX idx_data_points_address ON data_points(device_id, address);
CREATE INDEX idx_data_points_type ON data_points(data_type);
CREATE INDEX idx_data_points_log_enabled ON data_points(log_enabled);
CREATE INDEX idx_current_values_timestamp ON current_values(value_timestamp DESC);
CREATE INDEX idx_current_values_quality ON current_values(quality_code);
CREATE INDEX idx_current_values_updated ON current_values(updated_at DESC);
CREATE INDEX idx_current_values_updated_at ON current_values(updated_at);
CREATE TABLE virtual_point_execution_history (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    virtual_point_id INTEGER NOT NULL,
    execution_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    execution_duration_ms INTEGER,
    result_value TEXT,  -- JSON ÌòïÌÉú
    input_snapshot TEXT,  -- JSON ÌòïÌÉú
    success INTEGER DEFAULT 1,
    error_message TEXT,
    
    FOREIGN KEY (virtual_point_id) REFERENCES virtual_points(id) ON DELETE CASCADE
);
CREATE TABLE virtual_point_dependencies (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    virtual_point_id INTEGER NOT NULL,
    depends_on_type VARCHAR(20) NOT NULL,  -- 'data_point' or 'virtual_point'
    depends_on_id INTEGER NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (virtual_point_id) REFERENCES virtual_points(id) ON DELETE CASCADE,
    UNIQUE(virtual_point_id, depends_on_type, depends_on_id)
);
CREATE TABLE alarm_rules (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    
    -- ÎåÄÏÉÅ Ï†ïÎ≥¥
    target_type VARCHAR(20) NOT NULL,  -- 'data_point', 'virtual_point', 'group'
    target_id INTEGER,
    target_group VARCHAR(100),
    
    -- ÏïåÎûå ÌÉÄÏûÖ
    alarm_type VARCHAR(20) NOT NULL,  -- 'analog', 'digital', 'script'
    
    -- ÏïÑÎÇ†Î°úÍ∑∏ ÏïåÎûå ÏÑ§Ï†ï
    high_high_limit REAL,
    high_limit REAL,
    low_limit REAL,
    low_low_limit REAL,
    deadband REAL DEFAULT 0,
    rate_of_change REAL DEFAULT 0,  -- Î≥ÄÌôîÏú® ÏûÑÍ≥ÑÍ∞í
    
    -- ÎîîÏßÄÌÑ∏ ÏïåÎûå ÏÑ§Ï†ï
    trigger_condition VARCHAR(20),  -- 'on_true', 'on_false', 'on_change', 'on_rising', 'on_falling'
    
    -- Ïä§ÌÅ¨Î¶ΩÌä∏ Í∏∞Î∞ò ÏïåÎûå
    condition_script TEXT,  -- JavaScript Ï°∞Í±¥Ïãù
    message_script TEXT,    -- JavaScript Î©îÏãúÏßÄ ÏÉùÏÑ±
    
    -- Î©îÏãúÏßÄ Ïª§Ïä§ÌÑ∞ÎßàÏù¥Ïßï
    message_config TEXT,  -- JSON ÌòïÌÉú
    /* ÏòàÏãú:
    {
        "0": {"text": "Ïù¥ÏÉÅ Î∞úÏÉù", "severity": "critical"},
        "1": {"text": "Ï†ïÏÉÅ Î≥µÍµ¨", "severity": "info"},
        "high_high": {"text": "Îß§Ïö∞ ÎÜíÏùå: {value}{unit}", "severity": "critical"}
    }
    */
    message_template TEXT,  -- Í∏∞Î≥∏ Î©îÏãúÏßÄ ÌÖúÌîåÎ¶ø
    
    -- Ïö∞ÏÑ†ÏàúÏúÑ
    severity VARCHAR(20) DEFAULT 'medium',  -- 'critical', 'high', 'medium', 'low', 'info'
    priority INTEGER DEFAULT 100,
    
    -- ÏûêÎèô Ï≤òÎ¶¨
    auto_acknowledge INTEGER DEFAULT 0,
    acknowledge_timeout_min INTEGER DEFAULT 0,
    auto_clear INTEGER DEFAULT 1,
    
    -- ÏñµÏ†ú Í∑úÏπô
    suppression_rules TEXT,  -- JSON ÌòïÌÉú
    /* ÏòàÏãú:
    {
        "time_based": [
            {"start": "22:00", "end": "06:00", "days": ["SAT", "SUN"]}
        ],
        "condition_based": [
            {"point_id": 123, "condition": "value == 0"}
        ]
    }
    */
    
    -- ÏïåÎ¶º ÏÑ§Ï†ï
    notification_enabled INTEGER DEFAULT 1,
    notification_delay_sec INTEGER DEFAULT 0,
    notification_repeat_interval_min INTEGER DEFAULT 0,
    notification_channels TEXT,  -- JSON Î∞∞Ïó¥ ['email', 'sms', 'mq', 'webhook']
    notification_recipients TEXT,  -- JSON Î∞∞Ïó¥
    
    -- ÏÉÅÌÉú
    is_enabled INTEGER DEFAULT 1,
    is_latched INTEGER DEFAULT 0,  -- ÎûòÏπò ÏïåÎûå (ÏàòÎèô Î¶¨ÏÖã ÌïÑÏöî)
    
    -- ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    created_by INTEGER,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES users(id)
);
CREATE TABLE javascript_functions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),  -- 'math', 'logic', 'engineering', 'custom'
    function_code TEXT NOT NULL,
    parameters TEXT,  -- JSON Î∞∞Ïó¥ ÌååÎùºÎØ∏ÌÑ∞ Ï†ïÏùò
    return_type VARCHAR(20),
    is_system INTEGER DEFAULT 0,  -- ÏãúÏä§ÌÖú Ï†úÍ≥µ Ìï®Ïàò
    is_enabled INTEGER DEFAULT 1,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    created_by INTEGER,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES users(id),
    UNIQUE(tenant_id, name)
);
CREATE TABLE recipes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    
    -- Î†àÏãúÌîº Îç∞Ïù¥ÌÑ∞
    setpoints TEXT NOT NULL,  -- JSON ÌòïÌÉú
    /* ÏòàÏãú:
    {
        "points": [
            {"point_id": 1, "value": 100, "unit": "‚ÑÉ"},
            {"point_id": 2, "value": 50, "unit": "bar"}
        ]
    }
    */
    
    validation_rules TEXT,  -- JSON ÌòïÌÉú
    
    -- Î©îÌÉÄÎç∞Ïù¥ÌÑ∞
    version INTEGER DEFAULT 1,
    is_active INTEGER DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    created_by INTEGER,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES users(id)
);
CREATE TABLE schedules (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    
    -- Ïä§ÏºÄÏ§Ñ ÌÉÄÏûÖ
    schedule_type VARCHAR(20) NOT NULL,  -- 'time_based', 'event_based', 'condition_based'
    
    -- Ïã§Ìñâ ÎåÄÏÉÅ
    action_type VARCHAR(50) NOT NULL,  -- 'write_value', 'execute_recipe', 'run_script', 'generate_report'
    action_config TEXT NOT NULL,  -- JSON ÌòïÌÉú
    
    -- Ïä§ÏºÄÏ§Ñ ÏÑ§Ï†ï
    cron_expression VARCHAR(100),  -- time_basedÏù∏ Í≤ΩÏö∞
    trigger_condition TEXT,  -- condition_basedÏù∏ Í≤ΩÏö∞
    
    -- Ïã§Ìñâ ÏòµÏÖò
    retry_on_failure INTEGER DEFAULT 1,
    max_retries INTEGER DEFAULT 3,
    timeout_seconds INTEGER DEFAULT 300,
    
    -- ÏÉÅÌÉú
    is_enabled INTEGER DEFAULT 1,
    last_execution_time DATETIME,
    next_execution_time DATETIME,
    
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE
);
CREATE INDEX idx_vp_execution_history_vp_id ON virtual_point_execution_history(virtual_point_id);
CREATE INDEX idx_vp_execution_history_time ON virtual_point_execution_history(execution_time DESC);
CREATE INDEX idx_vp_dependencies_vp_id ON virtual_point_dependencies(virtual_point_id);
CREATE INDEX idx_vp_dependencies_depends_on ON virtual_point_dependencies(depends_on_type, depends_on_id);
CREATE INDEX idx_alarm_rules_tenant ON alarm_rules(tenant_id);
CREATE INDEX idx_alarm_rules_target ON alarm_rules(target_type, target_id);
CREATE INDEX idx_alarm_rules_enabled ON alarm_rules(is_enabled);
CREATE INDEX idx_js_functions_tenant ON javascript_functions(tenant_id);
CREATE INDEX idx_js_functions_category ON javascript_functions(category);
CREATE INDEX idx_recipes_tenant ON recipes(tenant_id);
CREATE INDEX idx_recipes_active ON recipes(is_active);
CREATE INDEX idx_schedules_tenant ON schedules(tenant_id);
CREATE INDEX idx_schedules_enabled ON schedules(is_enabled);
CREATE TABLE virtual_points (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL,
    
    -- Ïú†Ïó∞Ìïú Î≤îÏúÑ ÏÑ§Ï†ï
    scope_type VARCHAR(20) NOT NULL DEFAULT 'tenant', -- tenant, site, device
    site_id INTEGER,
    device_id INTEGER,
    
    -- Í∞ÄÏÉÅÌè¨Ïù∏Ìä∏ Ï†ïÎ≥¥
    name VARCHAR(100) NOT NULL,
    description TEXT,
    formula TEXT NOT NULL, -- JavaScript Í≥ÑÏÇ∞Ïãù
    data_type VARCHAR(20) NOT NULL DEFAULT 'float',
    unit VARCHAR(20),
    
    -- Í≥ÑÏÇ∞ ÏÑ§Ï†ï
    calculation_interval INTEGER DEFAULT 1000, -- ms
    calculation_trigger VARCHAR(20) DEFAULT 'timer', -- timer, onchange, manual
    is_enabled INTEGER DEFAULT 1,
    
    -- Î©îÌÉÄÎç∞Ïù¥ÌÑ∞
    category VARCHAR(50),
    tags TEXT, -- JSON Î∞∞Ïó¥
    
    -- ÌôïÏû• ÌïÑÎìú (v3.0.0)
    execution_type VARCHAR(20) DEFAULT 'javascript',
    dependencies TEXT,  -- JSON ÌòïÌÉúÎ°ú Ï†ÄÏû•
    cache_duration_ms INTEGER DEFAULT 0,
    error_handling VARCHAR(20) DEFAULT 'return_null',
    last_error TEXT,
    execution_count INTEGER DEFAULT 0,
    avg_execution_time_ms REAL DEFAULT 0.0,
    last_execution_time DATETIME,
    
    -- Í∞êÏÇ¨ ÌïÑÎìú
    created_by INTEGER,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE,
    FOREIGN KEY (site_id) REFERENCES sites(id) ON DELETE CASCADE,
    FOREIGN KEY (device_id) REFERENCES devices(id) ON DELETE CASCADE,
    
    -- Î≤îÏúÑÎ≥Ñ Ï†úÏïΩÏ°∞Í±¥
    CONSTRAINT chk_scope_consistency CHECK (
        (scope_type = 'tenant' AND site_id IS NULL AND device_id IS NULL) OR
        (scope_type = 'site' AND site_id IS NOT NULL AND device_id IS NULL) OR
        (scope_type = 'device' AND site_id IS NOT NULL AND device_id IS NOT NULL)
    ),
    CONSTRAINT chk_scope_type CHECK (scope_type IN ('tenant', 'site', 'device'))
);
CREATE TABLE virtual_point_inputs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    virtual_point_id INTEGER NOT NULL,
    variable_name VARCHAR(50) NOT NULL, -- Í≥ÑÏÇ∞ÏãùÏóêÏÑú ÏÇ¨Ïö©Ìï† Î≥ÄÏàòÎ™Ö (Ïòà: temp1, motor_power)
    
    -- Îã§ÏñëÌïú ÏÜåÏä§ ÌÉÄÏûÖ ÏßÄÏõê
    source_type VARCHAR(20) NOT NULL, -- data_point, virtual_point, constant, formula
    source_id INTEGER, -- data_points.id ÎòêÎäî virtual_points.id
    constant_value REAL, -- source_typeÏù¥ 'constant'Ïùº Îïå
    source_formula TEXT, -- source_typeÏù¥ 'formula'Ïùº Îïå (Í∞ÑÎã®Ìïú ÏàòÏãù)
    
    -- Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨ ÏòµÏÖò
    data_processing VARCHAR(20) DEFAULT 'current', -- current, average, min, max, sum
    time_window_seconds INTEGER, -- data_processingÏù¥ 'current'Í∞Ä ÏïÑÎãê Îïå
    
    FOREIGN KEY (virtual_point_id) REFERENCES virtual_points(id) ON DELETE CASCADE,
    UNIQUE(virtual_point_id, variable_name),
    CONSTRAINT chk_source_type CHECK (source_type IN ('data_point', 'virtual_point', 'constant', 'formula'))
);
CREATE TABLE virtual_point_values (
    virtual_point_id INTEGER PRIMARY KEY,
    value REAL,
    string_value TEXT, -- Î¨∏ÏûêÏó¥ ÌÉÄÏûÖ Í∞ÄÏÉÅÌè¨Ïù∏Ìä∏Ïö©
    quality VARCHAR(20) DEFAULT 'good',
    last_calculated DATETIME DEFAULT CURRENT_TIMESTAMP,
    calculation_error TEXT, -- Í≥ÑÏÇ∞ Ïò§Î•ò Î©îÏãúÏßÄ
    input_values TEXT, -- JSON: Í≥ÑÏÇ∞Ïóê ÏÇ¨Ïö©Îêú ÏûÖÎ†•Í∞íÎì§ (ÎîîÎ≤ÑÍπÖÏö©)
    
    FOREIGN KEY (virtual_point_id) REFERENCES virtual_points(id) ON DELETE CASCADE
);
CREATE INDEX idx_virtual_points_tenant ON virtual_points(tenant_id);
CREATE INDEX idx_virtual_points_scope ON virtual_points(scope_type);
CREATE INDEX idx_virtual_points_site ON virtual_points(site_id);
CREATE INDEX idx_virtual_points_device ON virtual_points(device_id);
CREATE INDEX idx_virtual_points_enabled ON virtual_points(is_enabled);
CREATE INDEX idx_virtual_points_category ON virtual_points(category);
CREATE INDEX idx_virtual_points_trigger ON virtual_points(calculation_trigger);
CREATE INDEX idx_vp_inputs_virtual_point ON virtual_point_inputs(virtual_point_id);
CREATE INDEX idx_vp_inputs_source ON virtual_point_inputs(source_type, source_id);
CREATE INDEX idx_vp_values_calculated ON virtual_point_values(last_calculated DESC);
CREATE TABLE script_library (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tenant_id INTEGER NOT NULL DEFAULT 0,
    category VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    display_name VARCHAR(100),
    description TEXT,
    script_code TEXT NOT NULL,
    parameters TEXT, -- JSON ÌòïÌÉú
    return_type VARCHAR(20) DEFAULT 'number',
    tags TEXT, -- JSON Î∞∞Ïó¥
    example_usage TEXT,
    is_system INTEGER DEFAULT 0,
    usage_count INTEGER DEFAULT 0,
    rating REAL DEFAULT 0.0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(tenant_id, name)
);
CREATE TABLE script_library_versions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    script_id INTEGER NOT NULL,
    version_number VARCHAR(20) NOT NULL,
    script_code TEXT NOT NULL,
    change_log TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (script_id) REFERENCES script_library(id) ON DELETE CASCADE
);
CREATE TABLE script_usage_history (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    script_id INTEGER NOT NULL,
    virtual_point_id INTEGER,
    tenant_id INTEGER NOT NULL,
    usage_context VARCHAR(50), -- 'virtual_point', 'alarm', 'manual'
    used_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (script_id) REFERENCES script_library(id) ON DELETE CASCADE
);
CREATE TABLE script_templates (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    category VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    template_code TEXT NOT NULL,
    variables TEXT, -- JSON ÌòïÌÉú
    industry VARCHAR(50),
    equipment_type VARCHAR(50),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE test_alarm_occurrences (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    rule_id INTEGER NOT NULL,
    tenant_id INTEGER NOT NULL,
    occurrence_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    trigger_value TEXT,
    trigger_condition TEXT,
    alarm_message TEXT,
    severity VARCHAR(20),
    state VARCHAR(20) DEFAULT 'active',
    acknowledged_time DATETIME,
    acknowledged_by INTEGER,
    acknowledge_comment TEXT,
    cleared_time DATETIME,
    cleared_value TEXT,
    clear_comment TEXT,
    notification_sent INTEGER DEFAULT 0,
    notification_time DATETIME,
    notification_count INTEGER DEFAULT 0,
    notification_result TEXT,
    context_data TEXT,
    source_name VARCHAR(100),
    location VARCHAR(200),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE alarm_occurrences (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    rule_id INTEGER NOT NULL,
    tenant_id INTEGER NOT NULL,
    occurrence_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    trigger_value TEXT,
    trigger_condition TEXT,
    alarm_message TEXT,
    severity VARCHAR(20),
    state VARCHAR(20) DEFAULT 'active',
    acknowledged_time DATETIME,
    acknowledged_by INTEGER,
    acknowledge_comment TEXT,
    cleared_time DATETIME,
    cleared_value TEXT,
    clear_comment TEXT,
    notification_sent INTEGER DEFAULT 0,
    notification_time DATETIME,
    notification_count INTEGER DEFAULT 0,
    notification_result TEXT,
    context_data TEXT,
    source_name VARCHAR(100),
    location VARCHAR(200),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
, device_id TEXT, point_id INTEGER);
CREATE INDEX idx_alarm_occurrences_rule ON alarm_occurrences(rule_id);
CREATE INDEX idx_alarm_occurrences_state ON alarm_occurrences(state);
CREATE INDEX idx_alarm_occurrences_time ON alarm_occurrences(occurrence_time DESC);
CREATE INDEX idx_alarm_occurrences_device_id ON alarm_occurrences(device_id);
CREATE INDEX idx_alarm_occurrences_point_id ON alarm_occurrences(point_id);
CREATE INDEX idx_alarm_occurrences_rule_device ON alarm_occurrences(rule_id, device_id);
